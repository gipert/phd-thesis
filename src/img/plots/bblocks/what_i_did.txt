rootcp 'gerda-data-bkgmodel-phaseIIplus-v06.13.root:raw/*' gerda-data-bkgmodel-phaseIIplus-v06.13-raw.root
rootcp 'gerda-data-bkgmodel-phaseIIplus-v06.13.root:lar/*' gerda-data-bkgmodel-phaseIIplus-v06.13-lar.root
rootcp 'gerda-data-bkgmodel-phaseIIplus-v06.13.root:lar_psd/*' gerda-data-bkgmodel-phaseIIplus-v06.13-lar_psd.root

hadd gerda-data-bkgmodel-all-v06.13-raw.root gerda-data-bkgmodel-phaseIIplus-v06.13-raw.root gerda-data-bkgmodel-phaseII-v06.13-raw.root
hadd gerda-data-bkgmodel-all-v06.13-lar.root gerda-data-bkgmodel-phaseIIplus-v06.13-lar.root gerda-data-bkgmodel-phaseII-v06.13-lar.root
hadd gerda-data-bkgmodel-all-v06.13-lar_psd.root gerda-data-bkgmodel-phaseIIplus-v06.13-lar_psd.root gerda-data-bkgmodel-phaseII-v06.13-lar_psd.root

auto f = TFile::Open("gerda-data-bkgmodel-all-v06.13-raw.root", "update");
auto h = (TH1D*)M1_enrBEGe->Clone();
h->SetTitle("edep, M=1 (enrAll)");
h->SetName("M1_enrAll");
h->Add(M1_invCoax);
h->Add(M1_enrCoax);
h->Write();
f->Close()

same for lar, lar_psd

root gerda-data-bkgmodel-all-v06.13-raw.root

ofstream f("M1_enrAll.csv");
f << "lowedge, bincontent\n";
f << "0, 0\n";
double content = -1;
M1_enrAll->Rebin(10);
for (int i = 1; i < M1_enrAll->GetNbinsX(); ++i) {
    if (M1_enrAll->GetBinContent(i) != content) {
        content = M1_enrAll->GetBinContent(i) > 0 ? M1_enrAll->GetBinContent(i) : 1E-6;
        f << M1_enrAll->GetBinLowEdge(i) << ", " << content << endl;
    }
}
f << "8000, 0";
f.close();
